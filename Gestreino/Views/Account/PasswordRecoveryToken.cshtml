@using JeanPiagetSGA.Models
@model PasswordResetTokenViewModel
@{
    ViewBag.Title = "Recuperar senha de acesso";
}

<!-- breadcrumb -->
<div class="pt-32pt">
    <div class="container page__container d-flex flex-column flex-md-row align-items-center text-center text-sm-left">
        <div class="flex d-flex flex-column flex-sm-row align-items-center">
            <div class="mb-24pt mb-sm-0 mr-sm-24pt">
                <h2 class="mb-0">Recuperar senha de acesso</h2>
                <ol class="breadcrumb p-0 m-0">
                    <li class="breadcrumb-item">@Html.ActionLink("Início", "", new { controller = "home" }, htmlAttributes: new { title = "Início" })</li>
                    <li class="breadcrumb-item">
                        Recuperar senha de acesso
                    </li>
                </ol>
            </div>
        </div>
    </div>
</div>
<!-- // END breadcrumb -->
<!-- Page Content -->

<div class="container page__container page-section">


    <div class="row">
        <div class="col-md-8 offset-md-2 mb-16pt">
            @if (Model.Status == 0 || Model.Status == 2)
            {
                <div class="alert alert-accent"
                     role="alert">
                    <div class="d-flex flex-wrap align-items-start">
                        <div class="mr-8pt">
                            <i class="fa fa-warning"></i>
                        </div>
                        <div class="flex"
                             style="min-width: 180px">
                            <small class="text-black-100">
                                <strong>@ViewBag.Message</strong>
                            </small>
                        </div>
                    </div>
                </div>

            }
            @if (Model.Status == 1)
            {
        <div class="card">
                <div class="list-group-item d-flex align-items-center card-reader-radius">
                    <img src="~/Assets/images/lock.png"
                         alt="Recuperar acesso"
                         class="mr-16pt">
                    <div class="flex"><strong>  <label class="col-form-label form-label">Recuperar senha de acesso</label></strong></div>
                </div>
           
                <div class="card-body">

                    <div class="handle-error alert alert-accent"
                         role="alert" style="display:none;">
                        <div class="d-flex flex-wrap align-items-start">
                            <div class="mr-8pt">
                                <i class="fa fa-warning"></i>
                            </div>
                            <div class="flex"
                                 style="min-width: 180px">
                                <small class="text-black-100">
                                    <strong>Atenção!</strong> <span class="handle-error-message"></span>
                                </small>
                            </div>
                        </div>
                    </div>

                    <div class="handle-success alert alert-soft-success"
                         role="alert" style="display:none;">
                        <div class="d-flex flex-wrap align-items-start">
                            <div class="mr-8pt">
                                <i class="fa fa-check-circle mr-12pt"></i>
                            </div>
                            <div class="flex"
                                 style="min-width: 180px">
                                <small class="text-black-100">
                                    <strong>Successo!</strong> <span class="handle-success-message"></span>
                                </small>
                            </div>
                        </div>
                    </div>

                    @using (Ajax.BeginForm("../account/PasswordRecoveryToken", null, new AjaxOptions { HttpMethod = "POST", LoadingElementId = "", LoadingElementDuration = 2000, OnBegin = "loadIn", OnComplete = "loadOut", OnSuccess = "handleSuccess", OnFailure = "handleFailure", UpdateTargetId = "" }, new { id = "" }))
                    //using (Html.BeginForm("users", "users", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        <span><i class="fa fa-info-circle"></i> Os campos a vermelho são de caráter obrigatório!</span>

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.TOKENID)
                        @Html.HiddenFor(m => m.TOKEN)
                        <div class="form-group row GenPasswordRow" style="display:none">
                            @Html.LabelFor(m => m.Email, new { @class = "col-sm-2 col-form-label text-right" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email", maxlength = "64", id = "Email" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-2 text-right"></div>
                            <div class="col-sm-10">
                                <label class="col-form-label">@Model.Login</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-2 text-right">
                                @Html.LabelFor(m => m.Password, new { @class = "col-form-label required" })
                            </div>
                            <div class="col-sm-4">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required", id = "Password" })
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-sm-2 text-right">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-form-label required" })
                            </div>
                            <div class="col-sm-4">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "ConfirmPassword", required = "required", })
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-sm-2 text-right">
                            </div>
                            <div class="col-sm-4">
                                <button type="submit" class="btn btn-primary btn-sm" id="BtnSubmit">Submeter</button>
                            </div>
                        </div>
                    }
                </div>
        </div>
               
            }

            <p class="mt-24pt">
                @Html.ActionLink("Iniciar Sessão", "login", new { controller = "account" }, htmlAttributes: new { title = "Iniciar Sessão" })
            </p>
        </div>

        </div>
</div>
<!-- // END Page Content -->